# This workflow will build and test a Golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"

      - name: Install, tidy and verify dependencies
        run: |
          go mod download
          go mod tidy
          go mod verify
        working-directory: src/backend

      - name: Install go-junit-report
        run: |
          go install github.com/jstemmer/go-junit-report@latest
          echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH
        working-directory: src/backend

      - name: Run tests and generate JUnit XML report
        run: |
          go test -cover -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml
        working-directory: src/backend

      - name: Upload test results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: src/backend/report.xml

      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Go Tests
          path: src/backend/report.xml
          reporter: junit

  build:
    name: "Build and Test"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install, tidy and verify dependencies
        run: |
          go mod download
          go mod tidy
          go mod verify
        working-directory: src/backend

      - name: Build
        run: |
          go build -v ./...
        working-directory: src/backend
